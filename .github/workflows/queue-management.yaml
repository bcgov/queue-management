name: Queue Management
concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true
on:
  workflow_dispatch:

jobs:
  create-image-tags:
    name: Create Image Tags
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.get-image-tags.outputs.image-tags }}

    steps:
    - name: Get Image Tags
      id: get-image-tags
      shell: bash
      run: |
        IMAGE_TAGS=$GITHUB_REPOSITORY_OWNER-$GITHUB_REF_NAME
        if [ $IMAGE_TAGS == "bcgov-master" ]; then
          # Will eventually change this to "latest" but for now don't
          # replace the image that is created by the Jenkins build.
          IMAGE_TAGS=actions-latest
        fi
        echo $IMAGE_TAGS
        echo "::set-output name=image-tags::$IMAGE_TAGS"

  ##############################################################################

  build-api:
    name: Build /api
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: s2i Build
      id: build-image
      uses: redhat-actions/s2i-build@v2
      with:
        builder_image: registry.access.redhat.com/ubi8/python-38:latest
        env_vars: |-
          AF_USERID=${{ secrets.ARTIFACTORY_USERNAME }}
          AF_PASSWD=${{ secrets.ARTIFACTORY_PASSWORD }}
        image: queue-management-api
        path_context: api
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  build-appointment-frontend:
    name: Build /appointment-frontend
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Login to Artifactory to Pull Images in build-image
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: appointment-frontend/Dockerfile
        context: appointment-frontend
        image: appointment-frontend
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  build-feedback-api:
    name: Build /feedback-api
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: s2i Build
      id: build-image
      uses: redhat-actions/s2i-build@v2
      with:
        builder_image: registry.access.redhat.com/ubi8/python-38:latest
        env_vars: |-
          AF_USERID=${{ secrets.ARTIFACTORY_USERNAME }}
          AF_PASSWD=${{ secrets.ARTIFACTORY_PASSWORD }}
        image: feedback-api
        path_context: ./feedback-api
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  build-frontend:
    name: Build /frontend
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Login to Artifactory to Pull Images in build-image
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: frontend/Dockerfile
        context: frontend
        image: queue-management-frontend
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  build-jobs-appointment-reminder:
    name: Build /jobs/appointment-reminder
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: Login to Artifactory to Pull Images in build-image
      uses: redhat-actions/podman-login@v1
      with:
        registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}

    - name: Buildah Action
      id: build-image
      uses: redhat-actions/buildah-build@v2
      with:
        containerfiles: jobs/appointment_reminder/Dockerfile
        context: jobs/appointment_reminder
        image: send-appointment-reminder-crond
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  build-notifications-api:
    name: Build /notifications-api
    needs: create-image-tags
    runs-on: ubuntu-latest

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: s2i Build
      id: build-image
      uses: redhat-actions/s2i-build@v2
      with:
        builder_image: registry.access.redhat.com/ubi8/python-38:latest
        env_vars: |-
          AF_USERID=${{ secrets.ARTIFACTORY_USERNAME }}
          AF_PASSWD=${{ secrets.ARTIFACTORY_PASSWORD }}
        image: notifications-api
        path_context: ./notifications-api
        tags: ${{ needs.create-image-tags.outputs.image-tags }}

    - name: Push Image to The Q
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_THEQ }}
        username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
        password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}

    - name: Push Image to QMS
      uses: redhat-actions/push-to-registry@v2
      with:
        image: ${{ steps.build-image.outputs.image }}
        tags: ${{ steps.build-image.outputs.tags }}
        registry: ${{ secrets.OPENSHIFT_REGISTRY }}/${{ secrets.NAMESPACE_QMS }}
        username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
        password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}

  ##############################################################################

  deploy-theq-dev:
    name: Deploy to TheQ dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: theq-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  newman-theq-dev:
    name: Newman tests in TheQ dev
    needs: deploy-theq-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Newman tests complete
 
  deploy-theq-test:
    name: Deploy to TheQ test
    needs: newman-theq-dev
    environment: theq-test
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-theq-prod:
    name: Deploy to TheQ prod
    needs: deploy-theq-test
    environment: theq-prod
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-qms-dev:
    name: Deploy to QMS dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: qms-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  newman-qms-dev:
    name: Newman tests in QMS dev
    needs: deploy-qms-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Newman tests complete
 
  deploy-qms-test:
    name: Deploy to QMS test
    needs: newman-qms-dev
    environment: qms-test
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-qms-prod:
    name: Deploy to QMS prod
    needs: deploy-qms-test
    environment: qms-prod
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
