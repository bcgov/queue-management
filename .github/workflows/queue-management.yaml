name: Queue Management
concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true
on:
  workflow_dispatch:

jobs:
  create-image-tags:
    name: Create Image Tags
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.get-image-tags.outputs.image-tags }}

    steps:
    - name: Get Image Tags
      id: get-image-tags
      shell: bash
      run: |
        IMAGE_TAGS=$GITHUB_REPOSITORY_OWNER-$GITHUB_REF_NAME
        if [ $IMAGE_TAGS == "bcgov-master" ]; then
          # Will eventually change this to "latest" but for now don't
          # replace the image that is created by the Jenkins build.
          IMAGE_TAGS=actions-latest
        fi
        echo Using tags: \"$IMAGE_TAGS\"
        echo "::set-output name=image-tags::$IMAGE_TAGS"

    - name: Log in to OpenShift 
      uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: https://api.silver.devops.gov.bc.ca:6443 # ${{ secrets.OPENSHIFT_SERVER }}
        openshift_token: ${{ secrets.TOKEN }}
#         openshift_username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
#         openshift_password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
        insecure_skip_tls_verify: true
        namespace: ${{ secrets.NAMESPACE_THEQ }}

    - name: Tag image (temp)
      shell: bash
      run: |
        echo foo
        oc list pods

  build-api:
    name: /api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-appointment-frontend:
    name: /appointment-frontend
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-feedback-api:
    name: /feedback-api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-frontend:
    name: /frontend
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-jobs-appointment-reminder:
    name: /jobs/appointment-reminder
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-notifications-api:
    name: /notifications-api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  deploy-theq-dev:
    name: Deploy to TheQ dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: theq-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  newman-theq-dev:
    name: Newman tests in TheQ dev
    needs: deploy-theq-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Newman tests complete
 
  deploy-theq-test:
    name: Deploy to TheQ test
    needs: newman-theq-dev
    environment: theq-test
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-theq-prod:
    name: Deploy to TheQ prod
    needs: deploy-theq-test
    environment: theq-prod
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-qms-dev:
    name: Deploy to QMS dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: qms-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  newman-qms-dev:
    name: Newman tests in QMS dev
    needs: deploy-qms-dev
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Newman tests complete
 
  deploy-qms-test:
    name: Deploy to QMS test
    needs: newman-qms-dev
    environment: qms-test
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
  deploy-qms-prod:
    name: Deploy to QMS prod
    needs: deploy-qms-test
    environment: qms-prod
  
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        shell: bash
        run: |
          echo Deploy complete
 
