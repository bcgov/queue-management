name: Queue Management
concurrency: 
  group: ${{ github.workflow }}
  cancel-in-progress: true
on:
  workflow_dispatch:

jobs:

  ##### SETUP ######################################################################################

  owasp-staff:
    name: OWASP ZAP Scan of The Q dev
    runs-on: ubuntu-latest
    
    steps:
      - name: OWASP ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: ${{ ZAP_STAFFURL }}

#   owasp-public:
#     name: OWASP ZAP Scan of Appointments dev
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: OWASP ZAP Scan
#         uses: zaproxy/action-full-scan@v0.3.0
#         with:
#           target: ${{ ZAP_APPTMNTURL }}

  devwork:
#     needs: [owasp-staff, owasp-public]
    needs: owasp-staff
    runs-on: ubuntu-latest
    steps:
    - name: exit
      run: exit 1

  create-image-tags:
    needs: devwork
    name: Create Image Tags
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ steps.get-image-tags.outputs.image-tags }}

    steps:
    - name: Get Image Tags
      id: get-image-tags
      run: |
        IMAGE_TAGS=$GITHUB_REPOSITORY_OWNER-$GITHUB_REF_NAME
        if [ $IMAGE_TAGS == "bcgov-master" ]; then
          # Will eventually change this to "latest" but for now don't
          # replace the image that is created by the Jenkins build.
          IMAGE_TAGS=actions-latest
        fi
        echo Using tags: \"$IMAGE_TAGS\"
        echo "::set-output name=image-tags::$IMAGE_TAGS"
          
  ##### BUILD ######################################################################################

  build-api:
    name: /api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-appointment-frontend:
    name: /appointment-frontend
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-feedback-api:
    name: /feedback-api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-frontend:
    name: /frontend
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-jobs-appointment-reminder:
    name: /jobs/appointment-reminder
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-dockerfile.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  build-notifications-api:
    name: /notifications-api
    needs: create-image-tags
    uses: walter-moar/queue-management/.github/workflows/reusable-build-s2i.yaml@master
    secrets:
      artifactory-password: ${{ secrets.ARTIFACTORY_PASSWORD }}
      artifactory-registry: ${{ secrets.ARTIFACTORY_REGISTRY }}
      artifactory-username: ${{ secrets.ARTIFACTORY_USERNAME }}
      namespace-theq: ${{ secrets.NAMESPACE_THEQ }}
      namespace-theq-password: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
      namespace-theq-username: ${{ secrets.NAMESPACE_THEQ_USERNAME }}
      namespace-qms: ${{ secrets.NAMESPACE_QMS }}
      namespace-qms-password: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
      namespace-qms-username: ${{ secrets.NAMESPACE_QMS_USERNAME }}
      openshift-registry: ${{ secrets.OPENSHIFT_REGISTRY }}
    with:
      directory: appointment-frontend
      image-name: appointment-frontend
      image-tags: ${{ needs.create-image-tags.outputs.image-tags }}

  ##### DEPLOY THE Q ###############################################################################

  approve-theq-dev:
    name: Approve Deploy to The Q dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: theq-dev
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.build-api.outputs.image-tags }}

#     steps:
#       - name: Deployment Approval
#         run: echo Approved

  tag-theq-dev:
    name: Tag The Q dev
    needs: approve-theq-dev
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_THEQ }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-theq-dev.outputs.image-tags }}
      tag-to: dev

  newman-theq:
    name: Newman Tests in TheQ dev
    needs: tag-theq-dev
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.tag-theq-dev.outputs.tag-from }}

    steps:
    - name: Check out
      uses: actions/checkout@v2

    - name: NPM Install
      run: |
        cd api/postman
        npm init -y
        npm install newman

    - name: Run Newman Tests
      run: |
        cd api/postman
        node_modules/newman/bin/newman.js run API_Test_TheQ_Booking.json \
            -e postman_env.json \
            --delay-request 250 \
            --global-var 'auth_url=${{ secrets.POSTMAN_AUTH_URL }}' \
            --global-var 'clientid=${{ secrets.POSTMAN_CLIENTID }}' \
            --global-var 'client_secret=${{ secrets.POSTMAN_CLIENT_SECRET }}' \
            --global-var 'password=${{ secrets.POSTMAN_PASSWORD }}' \
            --global-var 'password_nonqtxn=${{ secrets.POSTMAN_PASSWORD_NONQTXN }}' \
            --global-var 'public_url=${{ secrets.POSTMAN_PUBLIC_API_URL }}' \
            --global-var 'public_user_id=${{ secrets.POSTMAN_PUBLIC_USERID }}' \
            --global-var 'public_user_password=${{ secrets.POSTMAN_PASSWORD_PUBLIC_USER }}' \
            --global-var 'realm=${{ secrets.POSTMAN_REALM }}' \
            --global-var 'url=${{ secrets.POSTMAN_API_URL }}' \
            --global-var 'userid=${{ secrets.POSTMAN_USERID }}' \
            --global-var 'userid_nonqtxn=${{ secrets.POSTMAN_USERID_NONQTXN }}'

  approve-theq-test:
    name: Approve Deploy to The Q test
    needs: newman-theq
    environment: theq-test
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.newman-theq.outputs.image-tags }}

    steps:
      - name: Deployment Approval
        run: echo Approved

  tag-theq-test:
    name: Tag The Q test
    needs: approve-theq-test
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_THEQ }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-theq-test.outputs.image-tags }}
      tag-to: test

  approve-theq-prod:
    name: Approve Deploy to The Q prod
    needs: tag-theq-test
    environment: theq-prod
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.tag-theq-test.outputs.tag-from }}

    steps:
      - name: Deployment Approval
        run: echo Approved

  tag-theq-prod:
    name: Tag The Q prod
    needs: approve-theq-prod
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_THEQ }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-theq-prod.outputs.image-tags }}
      tag-to: prod

  ##### DEPLOY QMS #################################################################################

  approve-qms-dev:
    name: Approve Deploy to QMS dev
    needs: [build-api, build-appointment-frontend, build-feedback-api, build-frontend, build-jobs-appointment-reminder, build-notifications-api]
    environment: qms-dev
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.build-api.outputs.image-tags }}

    steps:
      - name: Deployment Approval
        run: echo Approved

  tag-qms-dev:
    name: Tag QMS dev
    needs: approve-qms-dev
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_QMS }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_QMS_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-qms-dev.outputs.image-tags }}
      tag-to: dev

  approve-qms-test:
    name: Approve Deploy to QMS test
    needs: tag-qms-dev
    environment: qms-test
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.tag-qms-dev.outputs.tag-from }}

    steps:
      - name: Deployment Approval
        run: echo Approved

  tag-qms-test:
    name: Tag QMS test
    needs: approve-qms-test
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_THEQ }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-qms-test.outputs.image-tags }}
      tag-to: test

  approve-qms-prod:
    name: Approve Deploy to QMS prod
    needs: tag-qms-test
    environment: qms-prod
    runs-on: ubuntu-latest
    outputs:
      image-tags: ${{ needs.tag-qms-test.outputs.tag-from }}

    steps:
      - name: Deployment Approval
        run: echo Approved

  tag-qms-prod:
    name: Tag QMS prod
    needs: approve-qms-prod
    uses: walter-moar/queue-management/.github/workflows/reusable-tag-image.yaml@master
    secrets:
      namespace: ${{ secrets.NAMESPACE_THEQ }}
      openshift-api: ${{ secrets.OPENSHIFT_API }}
      openshift-token: ${{ secrets.NAMESPACE_THEQ_PASSWORD }}
    with:
      image-names: appointment-frontend
      tag-from: ${{ needs.approve-qms-prod.outputs.image-tags }}
      tag-to: prod
