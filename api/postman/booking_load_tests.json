{
	"info": {
		"_postman_id": "b470b385-ea70-46dd-9eef-ac9fd6ef13ec",
		"name": " Bookings End-point Testing",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Setup",
			"item": [
				{
					"name": "Authentication Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "454ea7d6-4c7e-4571-8bc1-be7eed57d03a",
								"exec": [
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"//Test to make sure that the access token field is not null",
									"pm.test(\"Access Token is not null\", function(){",
									"    var access_token = jsonData.access_token;",
									"    if (pm.expect(access_token).not.eql(null)){",
									"        pm.globals.set(\"token\", access_token);",
									"    }",
									"});",
									"//Test to make sure that the refresh token response field is not null",
									"pm.test(\"Refresh Token is not null\", function(){",
									"    var refresh_token = jsonData.refresh_token;",
									"    if (pm.expect(refresh_token).not.eql(null)){",
									"        pm.globals.set(\"refresh_token\", refresh_token);",
									"    }",
									"});",
									"//Test to make sure that expires in response field is not nullf",
									"pm.test(\"Expires In is not null\", function(){",
									"    var expires_in = jsonData.expires_in;",
									"    if (pm.expect(expires_in).not.eql(null)){",
									"        pm.globals.set(\"expires_in\", expires_in);",
									"    }",
									"});",
									"//Test to make sure that refresh expires in response fiels is not null",
									"pm.test(\"Refresh Expires In is not null\", function(){",
									"    var refresh_expires_in = jsonData.refresh_expires_in;",
									"    if (pm.expect(refresh_expires_in).not.eql(null)){",
									"        pm.globals.set(\"refresh_expires_in\", refresh_expires_in);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "grant_type=password&client_id={{clientid}}&username={{userid}}&password={{password}}&client_secret={{client_secret}}"
						},
						"url": {
							"raw": "{{auth_url}}/auth/realms/{{realm}}/protocol/openid-connect/token?Content-Type=application/x-www-form-urlencoded",
							"host": [
								"{{auth_url}}"
							],
							"path": [
								"auth",
								"realms",
								"{{realm}}",
								"protocol",
								"openid-connect",
								"token"
							],
							"query": [
								{
									"key": "Content-Type",
									"value": "application/x-www-form-urlencoded"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exams",
			"item": [
				{
					"name": "Who am I",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c34723d3-c0d1-4504-97a2-373088309a5b",
								"exec": [
									"//  Ensure the client is logged in.",
									"eval(environment.auth_first);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e77f0ca3-62cf-49ba-8e17-67a16e8f8a5f",
								"exec": [
									"//  Install postmanBDD, json-bigint parse and stringify.",
									"eval(globals.postmanBDD);",
									"eval(globals.json_bigint_parse);",
									"",
									"//  Run complex tests.",
									"eval(environment.basic_response_test);",
									"",
									"//  Get json return data.",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.hasOwnProperty(\"csr\")) {",
									"\tcurrentOfficeId = jsonData.csr.office_id;",
									"\tcurrentOfficeNumber = jsonData.csr.office.office_number;",
									"    postman.setEnvironmentVariable(\"current_office_id\", currentOfficeId);",
									"    postman.setEnvironmentVariable(\"current_office_number\", currentOfficeNumber);",
									"};",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}csrs/me/",
							"host": [
								"{{url}}csrs"
							],
							"path": [
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam Post End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "851b530c-92d7-482c-9e80-2a1f542b280c",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"exam\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking\": {},",
									"                \"booking_id\": {},",
									"                \"deleted_date\": {},",
									"                \"event_id\": {\"type\": \"string\"},",
									"                \"exam_id\": {\"type\": \"number\"},",
									"                \"exam_method\": {\"type\": \"string\"},",
									"                \"exam_name\": {\"type\": \"string\"},",
									"                \"exam_received_date\": {},",
									"                \"exam_returned_date\": {},",
									"                \"exam_returned_tracking_number\": {},",
									"                \"exam_type\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"exam_color\": {\"type\": \"string\"},",
									"                        \"exam_type_id\": {\"type\": \"number\"},",
									"                        \"exam_type_name\": {\"type\": \"string\"},",
									"                        \"group_exam_ind\": {\"type\": \"number\"},",
									"                        \"ita_ind\": {\"type\": \"number\"},",
									"                        \"method_type\": {\"type\": \"string\"},",
									"                        \"number_of_hours\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"group_exam_ind\", \"ita_ind\", \"method_type\", \"number_of_hours\"]",
									"                },",
									"                \"exam_type_id\": {\"type\": \"number\"},",
									"                \"exam_written_ind\": {\"type\": \"number\"},",
									"                \"examinee_name\": {\"type\": \"string\"},",
									"                \"expiry_date\": {\"type\": \"string\"},",
									"                \"notes\": {\"type\": \"string\"},",
									"                \"number_of_students\": {\"type\": \"number\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": []",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"offsite_location\": {},",
									"                \"session_number\": {\"type\": \"number\"},",
									"            },",
									"            \"required\": [\"booking\", \"booking_id\", \"deleted_date\", \"event_id\", \"exam_id\", \"exam_method\", \"exam_name\", \"exam_received_date\", \"exam_returned_date\", \"exam_returned_tracking_number\", \"exam_type\", \"exam_type_id\", \"exam_written_ind\", \"examinee_name\", \"expiry_date\", \"notes\", \"number_of_students\", \"office\", \"office_id\", \"offsite_location\", \"session_number\"]",
									"        }",
									"    },",
									"    \"required\": [\"exam\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 201\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examSchema)).to.be.true;",
									"});",
									"",
									"var exam_id = jsonData.exam.exam_id;",
									"",
									"//Dynamic variable used for end-point testing later on",
									"postman.setEnvironmentVariable(\"exam_id\", JSON.stringify(exam_id));",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event_id\": \"e-000018\",\n  \"exam_name\": \"Super big friday demo\",\n  \"examinee_name\": \"Patrick Stewart\",\n  \"expiry_date\": \"2018-11-30 00:39:38.920\",\n  \"notes\": \"Mild shock\",\n  \"session_number\": 1,\n  \"number_of_students\": 12,\n  \"exam_method\": \"spoken word\",\n  \"exam_type_id\": 6,\n  \"invigilator_id\": 1,\n  \"office_id\" : {{current_office_id}},\n  \"exam_returned_ind\": 0\n}"
						},
						"url": {
							"raw": "{{url}}exams/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam Detail End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5206f620-8220-4ba4-860a-13c1bb452e6d",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"exam\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking\": {},",
									"                \"booking_id\": {},",
									"                \"deleted_date\": {},",
									"                \"event_id\": {\"type\": \"string\"},",
									"                \"exam_id\": {\"type\": \"number\"},",
									"                \"exam_method\": {\"type\": \"string\"},",
									"                \"exam_name\": {\"type\": \"string\"},",
									"                \"exam_received_date\": {},",
									"                \"exam_returned_date\": {},",
									"                \"exam_returned_tracking_number\": {},",
									"                \"exam_type\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"exam_color\": {\"type\": \"string\"},",
									"                        \"exam_type_id\": {\"type\": \"number\"},",
									"                        \"exam_type_name\": {\"type\": \"string\"},",
									"                        \"group_exam_ind\": {\"type\": \"number\"},",
									"                        \"ita_ind\": {\"type\": \"number\"},",
									"                        \"method_type\": {\"type\": \"string\"},",
									"                        \"number_of_hours\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"group_exam_ind\", \"ita_ind\", \"method_type\", \"number_of_hours\"]",
									"                },",
									"                \"exam_type_id\": {\"type\": \"number\"},",
									"                \"exam_written_ind\": {\"type\": \"number\"},",
									"                \"examinee_name\": {\"type\": \"string\"},",
									"                \"expiry_date\": {\"type\": \"string\"},",
									"                \"notes\": {\"type\": \"string\"},",
									"                \"number_of_students\": {\"type\": \"number\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": []",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"offsite_location\": {},",
									"                \"session_number\": {\"type\": \"number\"},",
									"            },",
									"            \"required\": [\"booking\", \"booking_id\", \"deleted_date\", \"event_id\", \"exam_id\", \"exam_method\", \"exam_name\", \"exam_received_date\", \"exam_returned_date\", \"exam_returned_tracking_number\", \"exam_type\", \"exam_type_id\", \"exam_written_ind\", \"examinee_name\", \"expiry_date\", \"notes\", \"number_of_students\", \"office\", \"office_id\", \"offsite_location\", \"session_number\"]",
									"        }",
									"    },",
									"    \"required\": [\"exam\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}exams/{{exam_id}}/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								"{{exam_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a7432b9-ffb0-4e23-a224-c3a48171d6c4",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"exams\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"booking\": {},",
									"                \"booking_id\": {},",
									"                \"deleted_date\": {},",
									"                \"event_id\": {\"type\": \"string\"},",
									"                \"exam_id\": {\"type\": \"number\"},",
									"                \"exam_method\": {\"type\": \"string\"},",
									"                \"exam_name\": {\"type\": \"string\"},",
									"                \"exam_received_date\": {},",
									"                \"exam_returned_date\": {},",
									"                \"exam_returned_tracking_number\": {},",
									"                \"exam_type\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"exam_color\": {\"type\": \"string\"},",
									"                        \"exam_type_id\": {\"type\": \"number\"},",
									"                        \"exam_type_name\": {\"type\": \"string\"},",
									"                        \"group_exam_ind\": {\"type\": \"number\"},",
									"                        \"ita_ind\": {\"type\": \"number\"},",
									"                        \"method_type\": {\"type\": \"string\"},",
									"                        \"number_of_hours\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"group_exam_ind\", \"ita_ind\", \"method_type\", \"number_of_hours\"]",
									"                },",
									"                \"exam_type_id\": {\"type\": \"number\"},",
									"                \"exam_written_ind\": {\"type\": \"number\"},",
									"                \"examinee_name\": {\"type\": \"string\"},",
									"                \"expiry_date\": {\"type\": \"string\"},",
									"                \"notes\": {\"type\": \"string\"},",
									"                \"number_of_students\": {\"type\": \"number\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": []",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"offsite_location\": {},",
									"                \"session_number\": {\"type\": \"number\"},",
									"            },",
									"            \"required\": [\"booking\", \"booking_id\", \"deleted_date\", \"event_id\", \"exam_id\", \"exam_method\", \"exam_name\", \"exam_received_date\", \"exam_returned_date\", \"exam_returned_tracking_number\", \"exam_type\", \"exam_type_id\", \"exam_written_ind\", \"examinee_name\", \"expiry_date\", \"notes\", \"number_of_students\", \"office\", \"office_id\", \"offsite_location\", \"session_number\"]",
									"        }",
									"    },",
									"    \"required\": [\"exams\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}exams/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam Put End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cf958af-12dd-44f4-a624-d070cc6d90cb",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"exam\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking\": {},",
									"                \"booking_id\": {},",
									"                \"deleted_date\": {},",
									"                \"event_id\": {\"type\": \"string\"},",
									"                \"exam_id\": {\"type\": \"number\"},",
									"                \"exam_method\": {\"type\": \"string\"},",
									"                \"exam_name\": {\"type\": \"string\"},",
									"                \"exam_received_date\": {},",
									"                \"exam_returned_date\": {},",
									"                \"exam_returned_tracking_number\": {},",
									"                \"exam_type\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"exam_color\": {\"type\": \"string\"},",
									"                        \"exam_type_id\": {\"type\": \"number\"},",
									"                        \"exam_type_name\": {\"type\": \"string\"},",
									"                        \"group_exam_ind\": {\"type\": \"number\"},",
									"                        \"ita_ind\": {\"type\": \"number\"},",
									"                        \"method_type\": {\"type\": \"string\"},",
									"                        \"number_of_hours\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"group_exam_ind\", \"ita_ind\", \"method_type\", \"number_of_hours\"]",
									"                },",
									"                \"exam_type_id\": {\"type\": \"number\"},",
									"                \"exam_written_ind\": {\"type\": \"number\"},",
									"                \"examinee_name\": {\"type\": \"string\"},",
									"                \"expiry_date\": {\"type\": \"string\"},",
									"                \"notes\": {\"type\": \"string\"},",
									"                \"number_of_students\": {\"type\": \"number\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": []",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"offsite_location\": {},",
									"                \"session_number\": {\"type\": \"number\"},",
									"            },",
									"            \"required\": [\"booking\", \"booking_id\", \"deleted_date\", \"event_id\", \"exam_id\", \"exam_method\", \"exam_name\", \"exam_received_date\", \"exam_returned_date\", \"exam_returned_tracking_number\", \"exam_type\", \"exam_type_id\", \"exam_written_ind\", \"examinee_name\", \"expiry_date\", \"notes\", \"number_of_students\", \"office\", \"office_id\", \"offsite_location\", \"session_number\"]",
									"        }",
									"    },",
									"    \"required\": [\"exam\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 201\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examSchema)).to.be.true;",
									"});",
									"",
									"//Test to see that booking ID is not null",
									"pm.test(\"Validate that Booking ID is not null\", function(){",
									"    pm.expect(jsonData.booking_id).not.eql(null);",
									"});",
									"",
									"//Test to see if booking id field has changed",
									"pm.test(\"Validate Booking ID change\", function(){",
									"   pm.expect(jsonData.booking_id == 2) ;",
									"});",
									"",
									"//Test to see if examinee name field has changed",
									"pm.test(\"Validate Examinee Name change\", function(){",
									"    pm.expect(jsonData.examinee_name === \"Captain Pickard\")",
									"});",
									"",
									"//Test to see if Event ID field remains unchanged",
									"pm.test(\"Validate Event Id remains unchanged\", function(){",
									"    pm.expect(jsonData.event_id === \"e-00005\");",
									"});",
									"",
									"//Test to see if Exam Name field remains unchanged",
									"pm.test(\"Validate Exam Name remains unchanged\", function(){",
									"    pm.expect(jsonData.exam_name === \"Drivers Exam\");",
									"});",
									"",
									"//Test to see if Expiry Date field remains unchanged",
									"pm.test(\"Validate Expiry Date remains unchanged\", function(){",
									"    pm.expect(jsonData.expiry_date === \"2018-11-29 23:10:28.841\");",
									"});",
									"",
									"//Test to see if Note field remains unchanged",
									"pm.test(\"Validate Notes remain unchanged\", function(){",
									"    pm.expect(jsonData.notes === \"Not sure if this examinee can speak\");",
									"});",
									"",
									"//Test to see if Exam Received field remains unchanged",
									"pm.test(\"Validate Exam Received field remains unchanged\", function(){",
									"    pm.expect(jsonData.exam_received === 0);",
									"});",
									"",
									"//Test to see if Session Number field remains unchanged",
									"pm.test(\"Validate Session Number field remains unchanged\", function(){",
									"    pm.expect(jsonData.session_number === 1);",
									"});",
									"",
									"//Test to see if Number of Students field remains unchanged",
									"pm.test(\"Validate Number of Students field remains unchanged\", function(){",
									"    pm.expect(jsonData.number_of_students === 25);",
									"});",
									"",
									"//Test to see if Exam Method field remains unchanged",
									"pm.test(\"Validate Exam Method field remains unchanged\", function(){",
									"    pm.expect(jsonData.exam.exam_method === \"in-person\");",
									"});",
									"",
									"//Test to see if Exam Type ID field remains unchanged",
									"pm.test(\"Validate Exam Type ID field remains unchanged\", function(){",
									"    pm.expect(jsonData.exam_type_id === 1);",
									"});",
									"",
									"//Test to see if Exam Type ID field remains unchanged",
									"pm.test(\"Validate Exam Type ID field remains unchanged\", function(){",
									"    pm.expect(jsonData.exam.exam_type_id === 1);",
									"});",
									"",
									"//Test to see if Invigilator ID field remains unchanged",
									"pm.test(\"Validate Invigilator ID field remains unchanged\", function(){",
									"    pm.expect(jsonData.invigilator_id === 1);",
									"});",
									"",
									"//Test to see if Office ID field remains unchanged",
									"pm.test(\"Validate Office ID field remains unchanged\", function(){",
									"    pm.expect(jsonData.office_id == 1);",
									"});",
									"",
									"//Test to see if Room ID field remains unchanged",
									"pm.test(\"Validate Roon ID field remains unchanged\", function(){",
									"    pm.expect(jsonData.room_id == 1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event_id\": \"e-00005\",\n  \"exam_name\": \"Drivers Exam\",\n  \"examinee_name\": \"Captain Pickard\",\n  \"expiry_date\": \"2018-11-29 23:10:28.841\",\n  \"notes\": \"Not sure if this examinee can speak.\",\n  \"exam_received_date\": \"2018-12-25 9:00:00.000\",\n  \"session_number\": 1,\n  \"number_of_students\": 25,\n  \"exam_method\": \"in-person\",\n  \"exam_type_id\": 6,\n  \"invigilator_id\": 1,\n  \"office_id\" : {{current_office_id}},\n  \"room_id\": 1\n}"
						},
						"url": {
							"raw": "{{url}}exams/{{exam_id}}/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								"{{exam_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam Detail End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3efcb554-1e5a-4e0a-91b8-aa32eb14a5e6",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"exam\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking\": {},",
									"                \"booking_id\": {},",
									"                \"deleted_date\": {},",
									"                \"event_id\": {\"type\": \"string\"},",
									"                \"exam_id\": {\"type\": \"number\"},",
									"                \"exam_method\": {\"type\": \"string\"},",
									"                \"exam_name\": {\"type\": \"string\"},",
									"                \"exam_received_date\": {},",
									"                \"exam_returned_date\": {},",
									"                \"exam_returned_tracking_number\": {},",
									"                \"exam_type\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"exam_color\": {\"type\": \"string\"},",
									"                        \"exam_type_id\": {\"type\": \"number\"},",
									"                        \"exam_type_name\": {\"type\": \"string\"},",
									"                        \"group_exam_ind\": {\"type\": \"number\"},",
									"                        \"ita_ind\": {\"type\": \"number\"},",
									"                        \"method_type\": {\"type\": \"string\"},",
									"                        \"number_of_hours\": {\"type\": \"number\"}",
									"                    },",
									"                    \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"group_exam_ind\", \"ita_ind\", \"method_type\", \"number_of_hours\"]",
									"                },",
									"                \"exam_type_id\": {\"type\": \"number\"},",
									"                \"exam_written_ind\": {\"type\": \"number\"},",
									"                \"examinee_name\": {\"type\": \"string\"},",
									"                \"expiry_date\": {\"type\": \"string\"},",
									"                \"notes\": {\"type\": \"string\"},",
									"                \"number_of_students\": {\"type\": \"number\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": []",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"offsite_location\": {},",
									"                \"session_number\": {\"type\": \"number\"},",
									"            },",
									"            \"required\": [\"booking\", \"booking_id\", \"deleted_date\", \"event_id\", \"exam_id\", \"exam_method\", \"exam_name\", \"exam_received_date\", \"exam_returned_date\", \"exam_returned_tracking_number\", \"exam_type\", \"exam_type_id\", \"exam_written_ind\", \"examinee_name\", \"expiry_date\", \"notes\", \"number_of_students\", \"office\", \"office_id\", \"offsite_location\", \"session_number\"]",
									"        }",
									"    },",
									"    \"required\": [\"exam\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}exams/{{exam_id}}/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								"{{exam_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Exam Delete End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88b43898-330f-4cf1-81c3-8cce3c53f54c",
								"exec": [
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 204\", function(){",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}exams/{{exam_id}}/",
							"host": [
								"{{url}}exams"
							],
							"path": [
								"{{exam_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exams Export",
			"item": [
				{
					"name": "Exams Export List",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9e02fbaf-627e-43db-b516-226b1a2874e8",
								"exec": [
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 20,000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(20000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}exams/export/?start_date=2019-01-05&end_date=2019-01-31",
							"host": [
								"{{url}}exams"
							],
							"path": [
								"export",
								""
							],
							"query": [
								{
									"key": "start_date",
									"value": "2019-01-05"
								},
								{
									"key": "end_date",
									"value": "2019-01-31"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exam Types",
			"item": [
				{
					"name": "Exam Type List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2df2a851-6a71-48e6-b44f-ccf096fe9d83",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var examTypeSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"type\": \"object\",",
									"        \"properties\": {",
									"            \"exam_color\": {\"type\": \"string\"},",
									"            \"exam_type_id\": {\"type\": \"number\"},",
									"            \"exam_type_name\": {\"type\": \"string\"},",
									"            \"ita_ind\": {\"type\": \"number\"},",
									"            \"method_type\": {\"type\": \"string\"},",
									"            \"number_of_hours\": {\"type\": \"number\"},",
									"            \"group_exam_ind\": {\"type\": \"number\"}",
									"        },",
									"        \"required\": [\"exam_color\", \"exam_type_id\", \"exam_type_name\", \"ita_ind\", \"method_type\", \"number_of_hours\", \"group_exam_ind\"]",
									"    },",
									"    \"required\": []",
									"};            ",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Type Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, examTypeSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}exam_types/",
							"host": [
								"{{url}}exam_types"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Bookings",
			"item": [
				{
					"name": "Who am I",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c34723d3-c0d1-4504-97a2-373088309a5b",
								"exec": [
									"//  Ensure the client is logged in.",
									"eval(environment.auth_first);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e77f0ca3-62cf-49ba-8e17-67a16e8f8a5f",
								"exec": [
									"//  Install postmanBDD, json-bigint parse and stringify.",
									"eval(globals.postmanBDD);",
									"eval(globals.json_bigint_parse);",
									"",
									"//  Run complex tests.",
									"eval(environment.basic_response_test);",
									"",
									"//  Get json return data.",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.hasOwnProperty(\"csr\")) {",
									"\tcurrentOfficeId = jsonData.csr.office_id;",
									"\tcurrentOfficeNumber = jsonData.csr.office.office_number;",
									"    postman.setEnvironmentVariable(\"current_office_id\", currentOfficeId);",
									"    postman.setEnvironmentVariable(\"current_office_number\", currentOfficeNumber);",
									"};",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}csrs/me/",
							"host": [
								"{{url}}csrs"
							],
							"path": [
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking Post End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a4099862-1c9a-48f7-adbf-0240e6eb185a",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var bookingSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"booking\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking_contact_information\": {},",
									"                \"booking_id\": {\"type\": \"number\"},",
									"                \"booking_name\": {\"type\": \"string\"},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"fees\": {\"type\": \"string\"},",
									"                \"invigilator\": {},",
									"                \"invigilator_id\": {},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"timezone\": {}",
									"                    },",
									"                    \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"room\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"capacity\": {\"type\": \"number\"},",
									"                        \"color\": {\"type\": \"string\"},",
									"                        \"room_id\": {\"type\": \"number\"},",
									"                        \"room_name\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"capacity\", \"color\", \"room_id\", \"room_name\"]",
									"                },",
									"                \"room_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"            },",
									"            \"required\": [\"booking_contact_information\", \"booking_id\", \"booking_name\", \"end_time\", \"fees\", \"room\", \"room_id\", \"start_time\", \"invigilator_id\", \"office\", \"office_id\"]",
									"        },",
									"        \"errors\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {}",
									"        }",
									"    },",
									"    \"required\": [\"booking\", \"errors\"]",
									"}",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 201\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, bookingSchema)).to.be.true;",
									"});",
									"",
									"var booking_id = jsonData.booking.booking_id;",
									"",
									"//Dynamic variable used for end-point testing later on",
									"postman.setEnvironmentVariable(\"booking_id\", JSON.stringify(booking_id));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4df5dedd-4976-4cdc-b2be-739b2028cdc4",
								"exec": [
									"//  Calculate a start date a week from today.",
									"var later = new Date();",
									"later.setDate(later.getDate()+7);",
									"",
									"//  Get year, day, month from the later time.",
									"year = later.getFullYear().toString();",
									"month = (\"0\" + (later.getMonth() + 1).toString()).slice(-2);",
									"day = (\"0\" + (later.getDate()).toString()).slice(-2);",
									"",
									"//  Format starting and ending time for the booking.",
									"start_time = year + \"-\" + month + \"-\" + day + \"T17:00:00Z\";",
									"end_time = year + \"-\" + month + \"-\" + day + \"T19:00:00Z\";",
									"",
									"console.log(\"Start: \" + start_time);",
									"console.log(\"End:   \" + end_time);",
									"pm.globals.set(\"start_time\", JSON.stringify(start_time));",
									"pm.globals.set(\"end_time\", JSON.stringify(end_time));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"start_time\": {{start_time}},\n  \"end_time\": {{end_time}},\n  \"room_id\": 1,\n  \"fees\": \"false\",\n  \"booking_name\": \"Super big friday demo\",\n  \"office_id\" : {{current_office_id}}\n}\n"
						},
						"url": {
							"raw": "{{url}}bookings/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking Detail End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "232f5232-de75-4f55-b999-2e39e39a12a8",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var bookingSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"booking\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking_contact_information\": {},",
									"                \"booking_id\": {\"type\": \"number\"},",
									"                \"booking_name\": {\"type\": \"string\"},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"fees\": {\"type\": \"string\"},",
									"                \"invigilator\": {},",
									"                \"invigilator_id\": {},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"timezone\": {}",
									"                    },",
									"                    \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"room\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"capacity\": {\"type\": \"number\"},",
									"                        \"color\": {\"type\": \"string\"},",
									"                        \"room_id\": {\"type\": \"number\"},",
									"                        \"room_name\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"capacity\", \"color\", \"room_id\", \"room_name\"]",
									"                },",
									"                \"room_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"            },",
									"            \"required\": [\"booking_contact_information\", \"booking_id\", \"booking_name\", \"end_time\", \"fees\", \"room\", \"room_id\", \"start_time\", \"invigilator_id\", \"office\", \"office_id\"]",
									"        },",
									"        \"errors\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {}",
									"        }",
									"    },",
									"    \"required\": [\"booking\", \"errors\"]",
									"}",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, bookingSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}bookings/{{booking_id}}/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								"{{booking_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "59fc7e18-6df0-48d9-822c-6518fbece309",
								"exec": [
									"var bookingSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"bookings\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"booking_contact_information\": {},",
									"                \"booking_id\": {\"type\": \"number\"},",
									"                \"booking_name\": {\"type\": \"string\"},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"fees\": {\"type\": \"string\"},",
									"                \"invigilator\": {},",
									"                \"invigilator_id\": {},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"timezone\": {}",
									"                    },",
									"                    \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"room\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"capacity\": {\"type\": \"number\"},",
									"                        \"color\": {\"type\": \"string\"},",
									"                        \"room_id\": {\"type\": \"number\"},",
									"                        \"room_name\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"capacity\", \"color\", \"room_id\", \"room_name\"]",
									"                },",
									"                \"room_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"            },",
									"            \"required\": [\"booking_contact_information\", \"booking_id\", \"booking_name\", \"end_time\", \"fees\", \"room\", \"room_id\", \"start_time\", \"invigilator_id\", \"office\", \"office_id\"]",
									"        },",
									"        \"errors\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {}",
									"        }",
									"    },",
									"    \"required\": [\"bookings\", \"errors\"]",
									"}",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, bookingSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}bookings/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking Put End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b127046f-b399-4e66-b76f-b6e79268b8ce",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var bookingSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"booking\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking_contact_information\": {},",
									"                \"booking_id\": {\"type\": \"number\"},",
									"                \"booking_name\": {\"type\": \"string\"},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"fees\": {\"type\": \"string\"},",
									"                \"invigilator\": {},",
									"                \"invigilator_id\": {},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"timezone\": {}",
									"                    },",
									"                    \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"room\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"capacity\": {\"type\": \"number\"},",
									"                        \"color\": {\"type\": \"string\"},",
									"                        \"room_id\": {\"type\": \"number\"},",
									"                        \"room_name\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"capacity\", \"color\", \"room_id\", \"room_name\"]",
									"                },",
									"                \"room_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"            },",
									"            \"required\": [\"booking_contact_information\", \"booking_id\", \"booking_name\", \"end_time\", \"fees\", \"room\", \"room_id\", \"start_time\", \"invigilator_id\", \"office\", \"office_id\"]",
									"        },",
									"        \"errors\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {}",
									"        }",
									"    },",
									"    \"required\": [\"booking\", \"errors\"]",
									"}",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, bookingSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "9bde67e2-8eeb-4e50-90bf-caff1fef90a4",
								"exec": [
									"//  Calculate a start date a week from today.",
									"var later = new Date();",
									"later.setDate(later.getDate()+7);",
									"",
									"//  Get year, day, month from the later time.",
									"year = later.getFullYear().toString();",
									"month = (\"0\" + (later.getMonth() + 1).toString()).slice(-2);",
									"day = (\"0\" + (later.getDate()).toString()).slice(-2);",
									"",
									"//  Format starting and ending time for the booking.",
									"start_time = year + \"-\" + month + \"-\" + day + \"T21:00:00Z\";",
									"end_time = year + \"-\" + month + \"-\" + day + \"T23:00:00Z\";",
									"",
									"console.log(\"Start: \" + start_time);",
									"console.log(\"End:   \" + end_time);",
									"pm.globals.set(\"start_time\", JSON.stringify(start_time));",
									"pm.globals.set(\"end_time\", JSON.stringify(end_time));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"start_time\": {{start_time}},\n  \"end_time\": {{end_time}},\n  \"room_id\": 1,\n  \"fees\": \"true\",\n  \"booking_name\": \"Time to pay your fees.\",\n  \"office_id\" : {{current_office_id}}\n}"
						},
						"url": {
							"raw": "{{url}}bookings/{{booking_id}}/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								"{{booking_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking Detail End-point Again",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b5e53be0-ddda-4c99-b563-5a3b449e0f79",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var bookingSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"booking\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"booking_contact_information\": {},",
									"                \"booking_id\": {\"type\": \"number\"},",
									"                \"booking_name\": {\"type\": \"string\"},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"fees\": {\"type\": \"string\"},",
									"                \"invigilator\": {},",
									"                \"invigilator_id\": {},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                        \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"timezone\": {}",
									"                    },",
									"                    \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                },",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"room\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"capacity\": {\"type\": \"number\"},",
									"                        \"color\": {\"type\": \"string\"},",
									"                        \"room_id\": {\"type\": \"number\"},",
									"                        \"room_name\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"capacity\", \"color\", \"room_id\", \"room_name\"]",
									"                },",
									"                \"room_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"            },",
									"            \"required\": [\"booking_contact_information\", \"booking_id\", \"booking_name\", \"end_time\", \"fees\", \"room\", \"room_id\", \"start_time\", \"invigilator_id\", \"office\", \"office_id\"]",
									"        },",
									"        \"errors\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {}",
									"        }",
									"    },",
									"    \"required\": [\"booking\", \"errors\"]",
									"}",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Exam Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, bookingSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}bookings/{{booking_id}}/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								"{{booking_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Booking Delete End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e7c1d71-ea74-4a78-9ef2-ee9a7a47d915",
								"exec": [
									"// Check Response code for request",
									"pm.test(\"Response code for request is 204\", function(){",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}bookings/{{booking_id}}/",
							"host": [
								"{{url}}bookings"
							],
							"path": [
								"{{booking_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Invigilators",
			"item": [
				{
					"name": "Invigilator List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e68858e-985c-4fb0-bca6-04d33f65c28d",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var invigilatorSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"invigilators\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"contact_email\": {\"type\": \"string\"},",
									"                \"contact_phone\": {\"type\": \"string\"},",
									"                \"contract_expiry_date\": {\"type\": \"string\"},",
									"                \"contract_number\": {\"type\": \"string\"},",
									"                \"invigilator_id\": {\"type\": \"number\"},",
									"                \"invigilator_name\": {\"type\": \"string\"},",
									"                \"invigilator_notes\": {\"type\": \"string\"},",
									"                \"office\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        }",
									"                    },",
									"                    \"required\": [\"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                }",
									"            },",
									"            \"required\": [\"contact_email\", \"contact_phone\", \"contract_expiry_date\", \"contract_number\", \"invigilator_id\", \"invigilator_name\", \"invigilator_notes\", \"office\"]",
									"        }",
									"    }",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Invigilator Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, invigilatorSchema)).to.be.true;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}invigilators/",
							"host": [
								"{{url}}invigilators"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Rooms",
			"item": [
				{
					"name": "Room List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "859ae114-22c4-4f3e-9f1f-9f0e06fbc29d",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var roomSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"rooms\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"capacity\": {\"type\": \"number\"},",
									"                \"color\": {\"type\": \"string\"},",
									"                \"office\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"office_id\": {\"type\": \"number\"},",
									"                        \"office_name\": {\"type\": \"string\"},",
									"                        \"office_number\": {\"type\": \"number\"},",
									"                        \"sb\": {",
									"                            \"type\": \"object\",",
									"                            \"properties\": {",
									"                                \"sb_id\": {\"type\": \"number\"},",
									"                                \"sb_type\": {\"type\": \"string\"}",
									"                            },",
									"                            \"required\": [\"sb_id\", \"sb_type\"]",
									"                        },",
									"                    \"sb_id\": {\"type\": \"number\"}                        ",
									"                    },",
									"                    \"required\": [\"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"                }",
									"            },",
									"            \"required\": [\"capacity\", \"color\", \"office\", \"room_id\", \"room_name\"]",
									"        }",
									"    }",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Room Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, roomSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}rooms/",
							"host": [
								"{{url}}rooms"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CSRS",
			"item": [
				{
					"name": "CSRS Me Get End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1ed052a0-06cc-45c7-ae49-b19b96e02d51",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var CSRSSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"csr_id\": {\"type\": \"number\"},",
									"        \"csr_state\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"csr_state_desc\": {\"type\": \"string\"},",
									"                \"csr_state_id\": {\"type\": \"number\"},",
									"                \"csr_state_name\": {\"type\": \"string\"}",
									"            },",
									"            \"required\": [\"csr_state_desc\", \"csr_state_id\", \"csr_state_name\"]",
									"        },",
									"        \"csr_state_id\": {\"type\": \"number\"},",
									"        \"deleted\": {},",
									"        \"finance_designate\": {\"type\": \"number\"},",
									"        \"ita_designate\": {\"type\": \"number\"},",
									"        \"liaison_designate\": {\"type\": \"number\"},",
									"        \"office\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"appointments_enabled_ind\": {\"type\": \"number\"},",
									"                \"exams_enabled_ind\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"office_name\": {\"type\": \"string\"},",
									"                \"office_number\": {\"type\": \"number\"},",
									"                \"sb\":{",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"sb_type\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"sb_id\", \"sb_type\"]",
									"                }",
									"            },",
									"            \"required\": [\"appointments_enabled_ind\", \"exams_enabled_ind\", \"office_id\", \"office_name\", \"office_number\", \"sb\"]",
									"        },",
									"        \"office_name\": {\"type\": \"string\"},",
									"        \"pesticide_designate\": {\"type\": \"number\"},",
									"        \"qt_xn_csr_ind\": {\"type\": \"number\"},",
									"        \"receptionist_ind\": {\"type\": \"number\"},",
									"        \"role\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"role_code\": {\"type\": \"string\"},",
									"                \"role_desc\": {\"type\": \"string\"},",
									"                \"role_id\": {\"type\": \"number\"}",
									"            },",
									"            \"required\": [\"role_code\", \"role_desc\", \"role_id\"]",
									"        },",
									"        \"role_id\": {\"type\": \"number\"},",
									"        \"username\": {\"type\": \"string\"}",
									"    },",
									"    \"individual_exams\": {\"type\": \"number\"},",
									"    \"group_exams\": {\"type\": \"number\"},",
									"    \"required\": [\"csr\", \"individual_exams\", \"group_exams\"]",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response CSRs Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, CSRSSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1c4020cd-fb05-478c-b908-3197c80d492e",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}csrs/me/",
							"host": [
								"{{url}}csrs"
							],
							"path": [
								"me",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Offices",
			"item": [
				{
					"name": "Office List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad6ffb6d-efad-4e11-b4a9-99e49f457bbd",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var officeSchema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"offices\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"exams_enabled\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"office_name\": {\"type\": \"string\"},",
									"                \"office_number\": {\"type\": \"number\"},",
									"                \"sb\": {",
									"                    \"type\": \"object\",",
									"                    \"properties\": {",
									"                        \"sb_id\": {\"type\": \"number\"},",
									"                        \"sb_type\": {\"type\": \"string\"}",
									"                    },",
									"                    \"required\": [\"sb_id\", \"sb_type\"]",
									"                },",
									"                \"sb_id\": {\"type\": \"number\"}",
									"            },",
									"            \"required\": [\"exams_enabled\", \"office_id\", \"office_name\", \"office_number\", \"sb\", \"sb_id\"]",
									"        }",
									"    }",
									"};",
									"",
									"//  Get the max response time allowed.",
									"var response_max = JSON.parse(globals.response_max);",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than \" + response_max.toString() + \"ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(response_max);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Office Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, officeSchema)).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}offices/",
							"host": [
								"{{url}}offices"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appointments",
			"item": [
				{
					"name": "Who am I",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "c34723d3-c0d1-4504-97a2-373088309a5b",
								"exec": [
									"//  Ensure the client is logged in.",
									"eval(environment.auth_first);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "e77f0ca3-62cf-49ba-8e17-67a16e8f8a5f",
								"exec": [
									"//  Install postmanBDD, json-bigint parse and stringify.",
									"eval(globals.postmanBDD);",
									"eval(globals.json_bigint_parse);",
									"",
									"//  Run complex tests.",
									"eval(environment.basic_response_test);",
									"",
									"//  Get json return data.",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"if (jsonData.hasOwnProperty(\"csr\")) {",
									"\tcurrentOfficeId = jsonData.csr.office_id;",
									"\tcurrentOfficeNumber = jsonData.csr.office.office_number;",
									"    postman.setEnvironmentVariable(\"current_office_id\", currentOfficeId);",
									"    postman.setEnvironmentVariable(\"current_office_number\", currentOfficeNumber);",
									"};",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}csrs/me/",
							"host": [
								"{{url}}csrs"
							],
							"path": [
								"me",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment Post End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "851b530c-92d7-482c-9e80-2a1f542b280c",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var appointmentSchema = {",
									"    \"type\": \"object\", ",
									"    \"properties\": {",
									"        \"appointment\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"appointment_id\": {\"type\": \"number\"},",
									"                \"checked_in_time\": {\"type\": [\"string\", \"null\"]},",
									"                \"citizen_name\": {\"type\": \"string\"},",
									"                \"comments\": {\"type\": \"string\"},",
									"                \"contact_information\": {},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"office\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"service_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"                ",
									"            },",
									"            \"required\": [\"appointment_id\", \"checked_in_time\", \"citizen_name\", \"comments\", \"contact_information\", \"end_time\", \"office\", \"office_id\", \"service_id\", \"start_time\"],",
									"            \"errors\": {}",
									"        }",
									"    },",
									"    \"required\": [\"appointment\"],",
									"    \"errors\": {}",
									"};",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 201\", function(){",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Response time less than 500ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Appointments Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, appointmentSchema)).to.be.true;",
									"});",
									"",
									"var appointment_id = jsonData.appointment.appointment_id;",
									"",
									"//Dynamic variable used for end-point testing later on",
									"postman.setEnvironmentVariable(\"appointment_id\", JSON.stringify(appointment_id));"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "e8444129-3a7b-4a2f-82d0-fd9b5d395f0d",
								"exec": [
									"//  Calculate a start date a week from today.",
									"var later = new Date();",
									"later.setDate(later.getDate()+7);",
									"",
									"//  Get year, day, month from the later time.",
									"year = later.getFullYear().toString();",
									"month = (\"0\" + (later.getMonth() + 1).toString()).slice(-2);",
									"day = (\"0\" + (later.getDate()).toString()).slice(-2);",
									"",
									"//  Format starting and ending time for the booking.",
									"start_time = year + \"-\" + month + \"-\" + day + \"T17:00:00Z\";",
									"end_time = year + \"-\" + month + \"-\" + day + \"T19:00:00Z\";",
									"",
									"console.log(\"Start:    \" + start_time);",
									"console.log(\"End:      \" + end_time);",
									"pm.globals.set(\"start_time\", JSON.stringify(start_time));",
									"pm.globals.set(\"end_time\", JSON.stringify(end_time));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"service_id\": 13,\n \"office_id\" : {{current_office_id}},\n \"start_time\": {{start_time}},\n \"end_time\": {{end_time}},\n \"category\": \"Exam\",\n \"comments\": \"Missed playoffs, needs to talk.\",\n \"citizen_name\": \"LeBron James\"\n}"
						},
						"url": {
							"raw": "{{url}}appointments/",
							"host": [
								"{{url}}appointments"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment Detail End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5206f620-8220-4ba4-860a-13c1bb452e6d",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var appointmentSchema = {",
									"    \"type\": \"object\", ",
									"    \"properties\": {",
									"        \"appointment\": {",
									"            \"type\": \"object\",",
									"            \"properties\": {",
									"                \"appointment_id\": {\"type\": \"number\"},",
									"                \"checked_in_time\": {\"type\": [\"string\", \"null\"]},",
									"                \"citizen_name\": {\"type\": \"string\"},",
									"                \"comments\": {\"type\": \"string\"},",
									"                \"contact_information\": {},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"office\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"service_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"                ",
									"            },",
									"            \"required\": [\"appointment_id\", \"checked_in_time\", \"citizen_name\", \"comments\", \"contact_information\", \"end_time\", \"office\", \"office_id\", \"service_id\", \"start_time\"],",
									"            \"errors\": {}",
									"        }",
									"    },",
									"    \"required\": [\"appointment\"],",
									"    \"errors\": {}",
									"};",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Appointment Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, appointmentSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}appointments/{{appointment_id}}/",
							"host": [
								"{{url}}appointments"
							],
							"path": [
								"{{appointment_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment List End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2a7432b9-ffb0-4e23-a224-c3a48171d6c4",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var appointmentSchema = {",
									"    \"type\": \"object\", ",
									"    \"properties\": {",
									"        \"appointments\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"appointment_id\": {\"type\": \"number\"},",
									"                \"checked_in_time\": {\"type\": [\"string\", \"null\"]},",
									"                \"citizen_name\": {\"type\": \"string\"},",
									"                \"comments\": {\"type\": \"string\"},",
									"                \"contact_information\": {},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"office\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"service_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"                ",
									"            },",
									"            \"required\": [\"appointment_id\", \"checked_in_time\", \"citizen_name\", \"comments\", \"contact_information\", \"end_time\", \"office\", \"office_id\", \"service_id\", \"start_time\"],",
									"            \"errors\": {}",
									"        }",
									"    },",
									"    \"required\": [\"appointments\"],",
									"    \"errors\": {}",
									"};",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 1000ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"pm.test(\"Validate Response Appointment Schema\", function(){",
									"    pm.expect(tv4.validate(jsonData, appointmentSchema)).to.be.true;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}appointments/",
							"host": [
								"{{url}}appointments"
							],
							"path": [
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment Put End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cf958af-12dd-44f4-a624-d070cc6d90cb",
								"exec": [
									"// Define the JSON Schema expected in response",
									"var appointmentSchema = {",
									"    \"type\": \"object\", ",
									"    \"properties\": {",
									"        \"appointments\": {",
									"            \"type\": \"array\",",
									"            \"properties\": {",
									"                \"appointment_id\": {\"type\": \"number\"},",
									"                \"checked_in_time\": {\"type\": [\"string\", \"null\"]},",
									"                \"citizen_name\": {\"type\": \"string\"},",
									"                \"comments\": {\"type\": \"string\"},",
									"                \"contact_information\": {},",
									"                \"end_time\": {\"type\": \"string\"},",
									"                \"office\": {\"type\": \"number\"},",
									"                \"office_id\": {\"type\": \"number\"},",
									"                \"service_id\": {\"type\": \"number\"},",
									"                \"start_time\": {\"type\": \"string\"},",
									"                ",
									"            },",
									"            \"required\": [\"appointment_id\", \"checked_in_time\", \"citizen_name\", \"comments\", \"contact_information\", \"end_time\", \"office\", \"office_id\", \"service_id\", \"start_time\"],",
									"            \"errors\": {}",
									"        }",
									"    },",
									"    \"required\": [\"appointments\"],",
									"    \"errors\": {}",
									"};",
									"",
									"// Check Response code for request",
									"pm.test(\"Response code for request is 200\", function(){",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time less than 200ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"// Parse response body",
									"var jsonData = JSON.parse(responseBody);",
									"",
									"//Test to see if response schema is valid",
									"// pm.test(\"Validate Response Appointment Schema\", function(){",
									"//     pm.expect(tv4.validate(jsonData, appointmentSchema)).to.be.true;",
									"// });",
									"",
									"//Test to see that appointment ID is not null",
									"pm.test(\"Validate that Booking ID is not null\", function(){",
									"    pm.expect(jsonData.appointment_id).not.eql(null);",
									"});",
									"",
									"//Test to see if appointment id field has changed",
									"pm.test(\"Validate Appointment ID change\", function(){",
									"   pm.expect(jsonData.appointment_id == 3) ;",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "52ba16f8-f08e-4a75-a64c-39e59c64c1c6",
								"exec": [
									"//  Calculate a start date a week from today.",
									"var later = new Date();",
									"later.setDate(later.getDate()+7);",
									"",
									"//  Get year, day, month from the later time.",
									"year = later.getFullYear().toString();",
									"month = (\"0\" + (later.getMonth() + 1).toString()).slice(-2);",
									"day = (\"0\" + (later.getDate()).toString()).slice(-2);",
									"",
									"//  Format starting and ending time for the booking.",
									"start_time = year + \"-\" + month + \"-\" + day + \"T21:00:00Z\";",
									"end_time = year + \"-\" + month + \"-\" + day + \"T23:00:00Z\";",
									"",
									"console.log(\"Start: \" + start_time);",
									"console.log(\"End:   \" + end_time);",
									"pm.globals.set(\"start_time\", JSON.stringify(start_time));",
									"pm.globals.set(\"end_time\", JSON.stringify(end_time));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n \"office_id\" : {{current_office_id}},\n \"start_time\": {{start_time}},\n \"end_time\": {{end_time}},\n \"category\": \"Exam\",\n \"comments\": \"super EARLY\"\n}"
						},
						"url": {
							"raw": "{{url}}appointments/{{appointment_id}}/",
							"host": [
								"{{url}}appointments"
							],
							"path": [
								"{{appointment_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Appointment Delete End-point",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "88b43898-330f-4cf1-81c3-8cce3c53f54c",
								"exec": [
									"// Check Response code for request",
									"pm.test(\"Response code for request is 204\", function(){",
									"    pm.response.to.have.status(204);",
									"});",
									"",
									"pm.test(\"Response time less than 200ms\", function(){",
									"    pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{url}}appointments/{{appointment_id}}/",
							"host": [
								"{{url}}appointments"
							],
							"path": [
								"{{appointment_id}}",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1bfedebf-df09-4b2b-8c49-78fc3b07e34b",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "787fad5e-5387-4a35-a8f5-0fdb115be54a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "278ecdd2-62d5-4df1-8d7f-b4cc71138575",
			"key": "auth_variable",
			"value": "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICI1NXhiZzcyaml6NWQ3cEtkbzdwNFhLdTB2VFA2UXMtemthZzFaY1ZKWTZVIn0.eyJqdGkiOiJmZWVlYzU4YS0zOTY0LTQwZDgtOTk3Ni02OTg1ZjNiNmQ2NzYiLCJleHAiOjE1NDQwMzY2NzQsIm5iZiI6MCwiaWF0IjoxNTQ0MDM0ODc0LCJpc3MiOiJodHRwczovL3Nzby10ZXN0LnBhdGhmaW5kZXIuZ292LmJjLmNhL2F1dGgvcmVhbG1zL3NiYyIsImF1ZCI6ImNmbXMtREVWIiwic3ViIjoiY2ZmNTQ3MDItZTkzMC00YjZlLTlhYzgtMmZkMTRjY2FmNzUxIiwidHlwIjoiQmVhcmVyIiwiYXpwIjoiY2Ztcy1ERVYiLCJub25jZSI6ImM1Zjg1NzBmLTgwNDktNDUxNC04Mjg4LTJjN2RmMzdkZTc5NSIsImF1dGhfdGltZSI6MTU0NDAzMjgxNywic2Vzc2lvbl9zdGF0ZSI6IjM4YjhiYzY4LTdmZDktNDE0NC04YWQ1LTI4ZGRlNmMwYWE1MCIsImFjciI6IjEiLCJhbGxvd2VkLW9yaWdpbnMiOlsiKiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsidW1hX2F1dGhvcml6YXRpb24iXX0sInJlc291cmNlX2FjY2VzcyI6eyJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJuYW1lIjoiQ0ZNUyBQb3N0bWFuIE9wZXJhdG9yIiwicHJlZmVycmVkX3VzZXJuYW1lIjoiY2Ztcy1wb3N0bWFuLW9wZXJhdG9yIiwiZ2l2ZW5fbmFtZSI6IkNGTVMgUG9zdG1hbiIsImZhbWlseV9uYW1lIjoiT3BlcmF0b3IifQ.CaDq7kLDMu1oqUVm6fhiAw4ubu_D4jVdkXrqLjfCxu9b-9GzyNSIK1Gy0NCesN3caG684-Ofv3LlragMOwdoRhx-xkO6j5rqPhh2EdEDYTGkrnmQrVBjgHECLYN3RSAUWk4oKsp7gRMLDorU6QWLZNRWe9qlzulbss08Mut4nZz1RV0CirvJQ9oshBdpstQIPBM7ZEptcF2AOnc8swcFMJ3mqdrs0ImytArwZEzYwRzSIAR0-kYW-AXq-TK1dk2R7fqkMXmy3ZdHoQlFRfNtfYILVPzBAq3zPftrD-lmCcfUWz-0UcwhmNELQ-Pej-t_Z_eFSPPGkAVIuv_kkHbqQw",
			"type": "string"
		}
	]
}