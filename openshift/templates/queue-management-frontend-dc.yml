apiVersion: v1
kind: Template
labels:
  template: queue-management-frontend
metadata:
  name: queue-management-frontend
objects:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: frontend-videos
    spec:
      accessModes:
        - ReadWriteMany
      resources:
        requests:
          storage: "1Gi"
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: keycloak
      labels:
        app: "${NAME}"
    data:
      keycloak.json: |
        {
          "realm": "${REALM}",
          "auth-server-url": "${AUTH_SERVER_URL}",
          "ssl-required": "external",
          "resource": "${RESOURCE}",
          "public-client": "true",
          "confidential-port": 0
        }
  - apiVersion: v1
    kind: Service
    metadata:
      name: "${NAME}"
      labels:
        app: "${NAME}"
    spec:
      ports:
        - name: web
          port: 2015
          targetPort: 2015
      selector:
        app: "${NAME}"
  - apiVersion: v1
    kind: Route
    metadata:
      name: "${NAME}"
    spec:
      host: "${APPLICATION_DOMAIN}"
      to:
        kind: Service
        name: "${NAME}"
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: "Defines how to deploy the application server"
      name: "${NAME}"
    spec:
      replicas: 2
      selector:
        name: ${NAME}
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 60
          maxSurge: 2
          maxUnavailable: 1
        resources: {}
        activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            app: "${NAME}"
            name: "${NAME}"
        spec:
          containers:
            - name: "${NAME}"
              image: " "
              args:
                - "/tmp/scripts/run"
              ports:
                - containerPort: 2015
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 2015
                timeoutSeconds: 3
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 2015
                timeoutSeconds: 3
              volumeMounts:
                - mountPath: /var/www/html/static/keycloak
                  name: keycloak
                - mountPath: /var/www/html/static/videos
                  name: frontend-videos
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 50m
                  memory: 256Mi
                limits:
                  cpu: 100m
                  memory: 512Mi
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
          volumes:
            - configMap:
                defaultMode: 420
                name: keycloak
              name: keycloak
            - name: frontend-videos
              persistentVolumeClaim:
                claimName: frontend-videos
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - "${NAME}"
                  topologyKey: kubernetes.io/hostname
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - "${NAME}"
            from:
              kind: ImageStreamTag
              namespace: ${TOOLS_WORKSPACE}
              name: "${NAME}:${IMAGE_TAG}"
parameters:
  - name: NAME
    displayName: Name
    description: The suffix for all created objects
    required: false
    value: queue-management-frontend
  - name: APPLICATION_DOMAIN
    description: "The exposed hostname that will route to the Vue application"
    value: ""
  - name: IMAGE_TAG
    description: The image tag to pull for the deployment.
    required: true
    value: dev
  - name: TOOLS_WORKSPACE
    description: The Location for your image streams (Tools Workspace)
    required: true
  - name: REALM
    description: "Keycloak realm"
    required: true
  - name: RESOURCE
    description: "keycloak client id"
    required: true
  - name: AUTH_SERVER_URL
    description: "keycloak server URL. Ex:https://yourkeycloakserver.com/auth/"
    required: true




