kind: Template
apiVersion: v1
labels:
  template: "mender-frontend-deployment" 
  app: mender
  subapp: mender-frontend
metadata:
  name: mender-frontend-deployment
objects:

  # mender api-gateway
  ## serves as an entrypoint for all HTTP communication with Mender. 
  ## Its main responsibility is the proxying of requests to Mender services, 
  ## while rewriting URLs from a public API scheme to an internal one
  ### https://github.com/mendersoftware/mender-api-gateway-docker
  - apiVersion: v1
    kind: Service
    metadata:
      creationTimestamp: null
      labels:
        service: mender-api-gateway
        app: mender
        subapp: mender-frontend
      name: mender-api-gateway
    spec:
      type: NodePort
      ports:
      - name: "api-gateway-port-mapping"
        port: 443 
        protocol: TCP
        targetPort: 8443
      selector:
        service: mender-api-gateway
        app: mender
    status:
      loadBalancer: {}
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: "The gatway through which the outside world communciates with Mender"
        template.alpha.openshift.io/wait-for-ready: "true" #?
      name: mender-api-gateway
      labels:
        app: mender
        subapp: mender-frontend
    spec:
      replicas: 1
      selector:
        app: mender
        service: mender-api-gateway
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 240
          maxSurge: 2
          maxUnavailable: 1
        resources: {}
        activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            app: mender
            subapp: mender-frontend
            service: mender-api-gateway
        spec:
          containers:
            - name: mender-api-gateway
              image: " "
              env:
                - name: ALLOWED_HOSTS
                  value: ${API_GATEWAY_ROUTE_HOSTNAME}
              ports:
                - containerPort: 8443
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8443
                timeoutSeconds: 3
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 8443
                timeoutSeconds: 3
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - mender-api-gateway
                  topologyKey: kubernetes.io/hostname
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mender-api-gateway
            from:
              kind: ImageStreamTag
              namespace: "${TOOLS_WORKSPACE}"
              name: mender-api-gateway-stream:${IMAGESTREAM_TAG}


  # mender gui
  ## webpage for interacting with Mender application
  ### https://github.com/mendersoftware/gui
  - apiVersion: v1
    kind: Service
    metadata:
      name: mender-gui
      labels:
        app: mender
        subapp: mender-frontend
    spec:
      ports:
      - port: 80
        protocol: TCP
        targetPort: 8080
      selector:
        service: mender-gui
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: "The gui service which provides the web interface"
        template.alpha.openshift.io/wait-for-ready: "true" #?
      name: mender-gui
      labels:
        app: mender
        subapp: mender-frontend
    spec:
      replicas: 1
      selector:
        app: mender
        service: mender-gui
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 300
          maxSurge: 2
          maxUnavailable: 1
        resources: {}
        activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            app: mender
            service: mender-gui
        spec:
          containers:
            - name: mender-gui
              image: " "
              env:
                - name: GATEWAY_IP
                  value: ${API_GATEWAY_ROUTE_HOSTNAME}
                - name: GATEWAY_PORT
                  value: ${API_GATEWAY_MAPPED_PORT}
              ports:
                - containerPort: 8080
                  protocol: TCP
              # readinessProbe:
              #   failureThreshold: 3
              #   initialDelaySeconds: 600
              #   periodSeconds: 10
              #   successThreshold: 1
              #   tcpSocket:
              #     port: 8080
              #   timeoutSeconds: 3
              # livenessProbe:
              #   failureThreshold: 3
              #   initialDelaySeconds: 600
              #   periodSeconds: 10
              #   successThreshold: 1
              #   tcpSocket:
              #     port: 8080
              #   timeoutSeconds: 3
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 1000m
                  memory: 512Mi
                limits:
                  cpu: 1000m
                  memory: 1024Mi
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - mender-gui
                  topologyKey: kubernetes.io/hostname
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mender-gui
            from:
              kind: ImageStreamTag
              namespace: "${TOOLS_WORKSPACE}"
              name: mender-gui-stream:${IMAGESTREAM_TAG}

  # Routes
  - apiVersion: v1
    kind: Route
    metadata:
      name: mender-api-gateway-route
      labels:
        app: mender
        subapp: mender-frontend
    spec:
      host: ${API_GATEWAY_ROUTE_HOSTNAME}
      port:
        targetPort: api-gateway-port-mapping
      to:
        kind: Service
        name: mender-api-gateway
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect

parameters:
  - description: The tag for image streams (i.e. dev/prod)
    name: IMAGESTREAM_TAG
    required: true
  - description: The hostname mapped to the Mender-Gateway-API route
    name: API_GATEWAY_ROUTE_HOSTNAME
    value: mender.pathfinder.gov.bc.ca
    required: true
  - description: The port the api-gateway is using
    name: API_GATEWAY_MAPPED_PORT
    value: "443"
  - description: The namespace of the image streams
    name: TOOLS_WORKSPACE
    required: true