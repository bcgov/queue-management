kind: Template
apiVersion: v1
metadata:
  name: mender-build
  annotations:
    description: "Build stage for all Mender application components."
    tags: queue-management,mender
    #iconClass: icon-python
labels:
  template: mender-image-build
parameters:
  - name: INTEGRATION_VERSION
    displayName: Mender-Integration git repo version
    description: Version number for Mender-Integration git repo. This is used to download some specific config files for setup.
    value: "1.7.0"
  - name: API_GATEWAY_VERSION
    displayName: Mender-API-Gateway version
    description: Version number for the Mender-API-Gateway Docker image.
    value: "1.6"
  - name: GUI_VERSION
    displayName: Mender-GUI version
    description: Version number for the Mender-GUI Docker image.
    value: "1.7"
  - name: GUI_VERSION
    displayName: Mender-GUI version
    description: Version number for the Mender-GUI Docker image.
    value: "1.7"
  - name: USERADM_VERSION
    displayName: Mender-Useradm version
    description: Version number for the Mender-Useradm Docker image.
    value: "1.7"
  - name: INVENTORY_VERSION
    displayName: Mender-Inventory version
    description: Version number for the Mender-Inventory Docker image.
    value: "1.5"
  - name: DEPLOYMENTS_VERSION
    displayName: Mender-Deployments version
    description: Version number for the Mender-Deployments Docker image.
    value: "1.6"
  - name: DEVICEAUTH_VERSION
    displayName: mender-device-auth version
    description: Version number for the mender-device-auth Docker image.
    value: "1.7"
  - name: MONGO_VERSION
    displayName: MongoDB version
    description: Version number for the MongoDB Docker image.
    value: "3.6"
  - name: CONDUCTOR_VERSION
    displayName: Mender-Conductor version
    description: Version number for the Mender-Conductor Docker image.
    value: "1.2"
  - name: ELASTICSEARCH_VERSION
    displayName: Mender-Elasticsearch version
    description: Version number for the Mender-Elasticsearch Docker image. It's an official image from Dockerhub.
    value: "5-alpine"
  - name: REDIS_VERSION
    displayName: Mender-Redis version
    description: Version number for the Mender-Redis Docker image. It's an official image from Dockerhub.
    value: "5-alpine3.8"

objects:
  # mender-api-gateway custom image build
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-api-gateway-stream
      annotations:
        description: "The mender-api-gateway image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-api-gateway-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/api-gateway

          # delete port 80 call
          RUN sed -i 's/listen 80/listen 8080/g' /usr/local/openresty/nginx/conf/nginx.conf
          
          # adjust nginx config for correct ports and remove ssl
          RUN sed -i 's/listen 443 ssl http2/listen 8443/g' /usr/local/openresty/nginx/conf/nginx.conf
          RUN sed -i 's/ssl_/# ssl_/g' /usr/local/openresty/nginx/conf/nginx.conf

          # unclear WHY this needs to happen but if you don't remove it you can't login
          RUN sed -i 's/set $origin_valid 0/set $origin_valid 1/g' /usr/local/openresty/nginx/conf/nginx.conf
          
          # the container needs to believe there are these files, even if we don't use them
          RUN mkdir -p /var/www/mendersoftware/cert
          RUN touch /var/www/mendersoftware/cert/cert.crt
          RUN touch /var/www/mendersoftware/cert/private.key

          # allow non-ROOT users to use these directories
          RUN chmod 0777 -R /usr/local/openresty
          RUN chmod 0777 -R /var/run/
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/api-gateway:${API_GATEWAY_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-api-gateway-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-gui custom image build
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-gui-stream
      annotations:
        description: "The mender-gui image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-gui-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/gui
          RUN sed -i 's/-p 80/-p 8080/g' /entrypoint.sh
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/gui:${GUI_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-gui-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-useradm existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-useradm-stream
      annotations:
        description: "The mender-useradm image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-useradm-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/useradm
          RUN chmod 0777 -R /etc/useradm/
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/useradm:${USERADM_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-useradm-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-inventory existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-inventory-stream
      annotations:
        description: "The mender-inventory image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-inventory-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/inventory
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/inventory:${INVENTORY_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-inventory-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-deployments existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-deployments-stream
      annotations:
        description: "The mender-deployments image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-deployments-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/deployments
          RUN chmod 0777 -R /etc/ssl/certs/
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/deployments:${DEPLOYMENTS_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-deployments-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-device-auth existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-device-auth-stream
      annotations:
        description: "The mender-device-auth image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-device-auth-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/deviceauth
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/deviceauth:${DEVICEAUTH_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-device-auth-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mongodb existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-mongodb-stream
      annotations:
        description: "The mongodb image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-mongodb-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM openshift/mongodb
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: docker-registry.default.svc:5000/openshift/mongodb:${MONGO_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-mongodb-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-conductor existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-conductor-stream
      annotations:
        description: "The mender-conductor image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-conductor-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM mendersoftware/mender-conductor
          # Grab config file from Mender-Integration git repo
          ADD https://raw.githubusercontent.com/mendersoftware/integration/${INTEGRATION_VERSION}/conductor/server/config/config.properties /app/config/
          RUN chmod 0777 -R /app/config/
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: mendersoftware/mender-conductor:${CONDUCTOR_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-conductor-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-elasticsearch existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-elasticsearch-stream
      annotations:
        description: "The mender-elasticsearch image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-elasticsearch-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM elasticsearch
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: elasticsearch:${ELASTICSEARCH_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-elasticsearch-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0

  # mender-redis existing image to stream
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: mender-redis-stream
      annotations:
        description: "The mender-redis image."
      labels:
        app: mender
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: mender-redis-build
      labels:
        app: mender
    spec:
      triggers:
        - type: ImageChange
          imageChange: {}
        - type: ConfigChange
      runPolicy: Serial
      source:
        type: Dockerfile
        dockerfile: |
          FROM redis
          # Grab config file from Mender-Integration git repo
          RUN mkdir -p /etc/redis/ 
          ADD https://raw.githubusercontent.com/mendersoftware/integration/${INTEGRATION_VERSION}/conductor/redis/redis.conf /etc/redis/
          RUN mkdir -p /redis/
          ADD https://raw.githubusercontent.com/mendersoftware/integration/${INTEGRATION_VERSION}/conductor/redis/entrypoint.sh /redis/
          RUN chmod 0777 -R /etc/redis/ /redis/
      strategy:
        type: Docker
        dockerStrategy:
          from:
            kind: DockerImage
            name: redis:${REDIS_VERSION}
      output:
        to:
          kind: ImageStreamTag
          name: mender-redis-stream:latest
      resources:
          limits:
            cpu: "1"
    status:
      lastVersion: 0