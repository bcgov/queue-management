kind: Template
apiVersion: v1
labels:
  template: "mender-mongodb-deployment" 
  app: mender
  subapp: mender-mongodb
metadata:
  name: mender-mongodb-deployment
objects:  
  # MongoDB 
  ## used by deployments, inventory, deviceauth, useradm
  - apiVersion: v1
    kind: Service
    metadata:
      name: mender-mongodb
      labels:
        app: mender
        subapp: mender-mongodb
    spec:
      ports:
      - port: 27017
        protocol: TCP
      selector:
        service: mender-mongodb
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      annotations:
        description: "The mongodb used by deviceauth, useradm, inventory, and deployments."
        template.alpha.openshift.io/wait-for-ready: "true" #?
      name: mender-mongodb
      labels:
        app: mender
        subapp: mender-mongodb
    spec:
      replicas: 1
      selector:
        app: mender
        service: mender-mongodb
      strategy:
        type: Rolling
        rollingParams:
          updatePeriodSeconds: 1
          intervalSeconds: 1
          timeoutSeconds: 120
          maxSurge: 2
          maxUnavailable: 1
        resources: {}
        activeDeadlineSeconds: 3600
      template:
        metadata:
          labels:
            app: mender
            service: mender-mongodb
        spec:
          containers:
            - name: mender-mongodb
              image: " "
              env:
                - name: MONGODB_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: mender-mongodb-secret
                      key: mongodb-password
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 27017
                timeoutSeconds: 3
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 3
                periodSeconds: 10
                successThreshold: 1
                tcpSocket:
                  port: 27017
                timeoutSeconds: 3
              volumeMounts:
                - name: mender-mongodb-pv-claim
                  mountPath: /data/db
              terminationMessagePath: "/dev/termination-log"
              terminationMessagePolicy: File
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
          restartPolicy: Always
          terminationGracePeriodSeconds: 30
          dnsPolicy: ClusterFirst
          securityContext: {}
          schedulerName: default-scheduler
          volumes:
            - name: mender-mongodb-pv-claim
              persistentVolumeClaim:
                claimName: mender-mongodb-pv-claim
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - mongodb
                  topologyKey: kubernetes.io/hostname
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - mender-mongodb
            from:
              kind: ImageStreamTag
              namespace: "${TOOLS_WORKSPACE}"
              name: mender-mongodb-stream:${IMAGESTREAM_TAG}

  # DB Volume Claim
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      labels:
        app: mender
        subapp: mender-mongodb
      name: mender-mongodb-pv-claim
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: ${MONGO_VOLUME_CAPACITY}

  # DB Configuration Secrets
  - apiVersion: v1
    kind: Secret
    metadata:
      name: mender-mongodb-secret
      labels:
        app: mender
        subapp: mender-mongodb
      annotations:
        template.openshift.io/base64-expose-mongodb-username: "{.data['mongodb-username']}"
        template.openshift.io/base64-expose-mongodb-password: "{.data['mongodb-password']}"
    type: Opaque
    stringData:
      mongodb-username: "admin"
      mongodb-password: "${MONGODB_ADMIN_PASSWORD}"

parameters:
  - description: The tag for image streams (i.e. dev/prod)
    name: IMAGESTREAM_TAG
    required: true
  - description: The namespace of the image streams
    name: TOOLS_WORKSPACE
    required: true
  - description: MongoDB admin password--automatically generated and stored as a sceret.
    name: MONGODB_ADMIN_PASSWORD
    required: true
    from: '[a-zA-Z0-9]{16}'
    generate: expression
  - description: Size of PersistentVolumeClaim used to persist Mongodb (example 5Gi, 250Mi, etc).
    name: MONGO_VOLUME_CAPACITY
    required: true
    value: "10Gi"